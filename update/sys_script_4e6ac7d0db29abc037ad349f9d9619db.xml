<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_task">stateCHANGESFROM-5^stateCHANGESTO3^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESFROM" or="false" value="-5"/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>HCMS Incident Resolved Permanently</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
        var worknoteContent, lastWorknote, taskSysId;

        var inc = new GlideRecord('incident');
        taskSysId = current.sys_id;
        // Update Incident state
        //inc.addQuery('short_description',lastWorknote);
        inc.addQuery('parent', taskSysId);
        inc.query();
        if (inc.next()) {
            inc.state = '6'; //// Resolved incident state
            inc.setValue('close_code', 'Solved (Permanently)');
            inc.setValue('close_notes', 'Incident is resolved successfully.');
            inc.update();
        }
        new HCMSLogLevel().LogMsg("info", "Incident Resolved : " + inc.number);
    } catch (e) {
        new HCMSLogLevel().LogMsg("error", " Error resolving the incident " + inc.number + " : " + e);
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>vinverm7@in.ibm.com</sys_created_by>
        <sys_created_on>2018-10-30 17:39:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4e6ac7d0db29abc037ad349f9d9619db</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>HCMS Incident Resolved Permanently</sys_name>
        <sys_overrides/>
        <sys_package display_value="IBM Hybrid Cloud Management" source="x_ibmg3_hcms">c5a89eb6db969b00e0f5325f9d96198a</sys_package>
        <sys_policy/>
        <sys_scope display_value="IBM Hybrid Cloud Management">c5a89eb6db969b00e0f5325f9d96198a</sys_scope>
        <sys_update_name>sys_script_4e6ac7d0db29abc037ad349f9d9619db</sys_update_name>
        <sys_updated_by>ashabagade</sys_updated_by>
        <sys_updated_on>2019-10-31 08:53:58</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=4e6ac7d0db29abc037ad349f9d9619db"/>
</record_update>
