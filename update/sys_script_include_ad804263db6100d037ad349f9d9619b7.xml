<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_ibmg3_hcms.generateSingleCart_V2</api_name>
        <client_callable>false</client_callable>
        <description>Generate Request item(s) using scoped Cart API for V2 version</description>
        <name>generateSingleCart_V2</name>
        <script><![CDATA[var generateSingleCart_V2 = Class.create();
generateSingleCart_V2.prototype = {
    initialize: function() {},

    processRequest: function(str, location, requestedFor) {
        try {

            var parser = JSON.parse(str);
            var ritmCount = parser.requestedItems;
            var msg = ritmCount.length;

            //Log Requested items count from the incoming payload
            new HCMSLogLevel().LogMsg('info', '*Requested item count CART API ' + parser.orderNumber + ' :' + msg);

            var requested_For = requestedFor;
            var strShortDescription = parser.orderPurpose;
            var strDescription = parser.detailedComments;
            var brokerLocation = location;
            var broker_order_number = parser.orderNumber;
            var broker_request_type = parser.requestType;
            var catalogItemName, changeApprovalRequired = '';
            var ApprovalHold = parser.requestApprovalHold;

            new HCMSLogLevel().LogMsg('info', 'order_number' + broker_order_number);
            //Log the Request Type is new or terminate
            new HCMSLogLevel().LogMsg('info', 'Request Type CART API for order:' + broker_order_number + ' ' + broker_request_type);

            if (broker_request_type == 'New') {
                broker_request_type = '1';
            }
            if (broker_request_type == 'Terminate') {
                broker_request_type = '2';
            }
            if (broker_request_type == 'Edit') {
                broker_request_type = '3';
            }
            if (broker_request_type == 'operation') {
                broker_request_type = '4';
            }
            requestedFor = requestedFor.toString;
            var broker_json = str;
            var brokerOrderSubmittedDate = parser.orderSubmittedTime;
            var cart;
            var grSys_id;
            cart = new sn_sc.CartJS();
            cart.empty();

            /* Create one or more RITM based on payload */
            for (var i = 0; i < ritmCount.length; i++) {
                cart = new sn_sc.CartJS();
                var arr = [];
                new HCMSLogLevel().LogMsg("info", "* Number of RITMS in the payload for order " + broker_order_number + ' :' + i);

                var itemServiceName = parser.requestedItems[i].serviceName;
                var serviceOfferingId = parser.requestedItems[i].serviceOfferingId;
                var soiID = parser.requestedItems[i].serviceOfferingInstanceId;
                var serviceProvider = parser.requestedItems[i].serviceOfferingProvider;
                var categoryID = parser.requestedItems[i].category;
                catalogItemName = parser.requestedItems[i].catalog_item_name;
				var serviceOfferingName = parser.requestedItems[i].serviceOfferingName;
				var ServiceOfferingDescription = parser.requestedItems[i].short_description;
                var gr = new GlideRecord('sc_cat_item');
                gr.addQuery('sys_name', catalogItemName);
                gr.query();
                if (gr.next()) {
                    grSys_id = (gr.sys_id).toString();
                }
                changeApprovalRequired = parser.requestedItems[i].changeApprovalRequired;
                if (changeApprovalRequired == "true")
                    changeApprovalRequired = "normal"; //Has change Approval
                else
                    changeApprovalRequired = "standard"; //No Approval
                var item = {
                    'sysparm_id': grSys_id, // Sys id of IBM Cloud Broker Provision catalog item: 'b64fe0ecdbe21b0037ad349f9d9619e3',
                    'sysparm_quantity': '1',
                    'variables': {
                        'var_requested_for': requested_For,
                        'short_description': ServiceOfferingDescription,
                        'var_description': strDescription,
                        'var_broker_location': brokerLocation,
                        'order_number': broker_order_number,
                        'var_request_type': broker_request_type,
                        'var_broker_json': str,
                        'var_order_date': brokerOrderSubmittedDate,
                        'var_service_offering_id': serviceOfferingId,
                        'var_service_instance_id': soiID,
                        'var_service_name': itemServiceName,
                        'var_offering_provider': serviceProvider,
                        'var_consume_category': categoryID,
                        'var_change_type': changeApprovalRequired,
						'var_service_offering_name' : serviceOfferingName
                    }
                };
                var cartDetails = cart.addToCart(item);
            }
            var CartItems = cart.getCartItems();
            var str1 = JSON.stringify(CartItems);
            var rc = cart.submitOrder({});
            if (parser.requestApprovalHold) {
                var reqObj = new GlideRecord('sc_request');
                reqObj.addQuery('number', rc.request_number);
                reqObj.query();
                if (reqObj.next())

                    reqObj.x_ibmg3_hcms_requestapprovalhold = ApprovalHold;
                reqObj.update();
            }

            new HCMSLogLevel().LogMsg('info', 'Request_number' + rc.request_number);
            return rc.request_number;



        } catch (ex) {
            new HCMSLogLevel().LogMsg('error', "generate request using cart api error message " + ex);
        }
    },
    type: 'generateSingleCart_V2'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>debada54@in.ibm.com</sys_created_by>
        <sys_created_on>2019-12-12 07:07:12</sys_created_on>
        <sys_id>ad804263db6100d037ad349f9d9619b7</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>generateSingleCart_V2</sys_name>
        <sys_package display_value="IBM Hybrid Cloud Management" source="x_ibmg3_hcms">c5a89eb6db969b00e0f5325f9d96198a</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Hybrid Cloud Management">c5a89eb6db969b00e0f5325f9d96198a</sys_scope>
        <sys_update_name>sys_script_include_ad804263db6100d037ad349f9d9619b7</sys_update_name>
        <sys_updated_by>asbagad1@in.ibm.com</sys_updated_by>
        <sys_updated_on>2020-04-16 12:05:23</sys_updated_on>
    </sys_script_include>
</record_update>
